buildscript {
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath("io.spring.javaformat:spring-javaformat-gradle-plugin:0.0.9")
    }
}

plugins {
    id "io.spring.dependency-management" version "1.0.6.RELEASE"
    id "com.jfrog.bintray" version "1.8.4"
    id 'maven-publish'
    id "com.cinnober.gradle.semver-git" version "2.4.0"
}

group 'org.jskele.libs.dao'

ext {
    springBootVersion = '2.0.1.RELEASE'
}

apply plugin: "java-library"
apply plugin: 'io.spring.javaformat'

task sourcesJar(type: Jar, dependsOn: classes) {
    classifier = 'sources'
    from sourceSets.main.allSource
}

tasks.withType(JavaCompile) {
    options.compilerArgs << '-parameters'
}

artifacts {
    archives sourcesJar
}

repositories {
    mavenCentral()
    jcenter()
}

dependencyManagement {
    imports {
        mavenBom "org.springframework.boot:spring-boot-starter-parent:${springBootVersion}"
    }
}

dependencies {
    annotationProcessor(
            "org.springframework:spring-context-indexer",
            'org.projectlombok:lombok',
    )

    compileOnly(
            'org.projectlombok:lombok',
    )

    implementation(
            'com.google.guava:guava',
            'org.springframework:spring-core',
            'org.springframework:spring-jdbc',
            'org.springframework:spring-context',
            'commons-beanutils:commons-beanutils:1.9.3',
            'org.apache.commons:commons-lang3',

            'org.jskele:lib-values:1.0',

            'com.mitchellbosecke:pebble:2.4.0',
            'org.reflections:reflections:0.9.11',
    )

    testAnnotationProcessor (
            "org.springframework:spring-context-indexer",
            "org.projectlombok:lombok",
    )

    testCompileOnly(
            'org.projectlombok:lombok',
    )

    testImplementation(
            'org.springframework.boot:spring-boot-starter-jdbc',
            'org.springframework.boot:spring-boot-starter-test',
            'ru.yandex.qatools.embed:postgresql-embedded:2.6',
    )

    testRuntime(
            'org.springframework.boot:spring-boot-starter-logging',
            'org.postgresql:postgresql'
    )

    sourceSets {
        test {
            resources {
                srcDir sourceSets.test.java // sql failid on java DAO klasside kÃµrval
            }
        }
    }
}

bintray {
    user = System.getProperty('bintray.user')
    key = System.getProperty('bintray.key')
    publications = ['mavenPublication']
    pkg {
        repo = 'jskele'
        name = 'lib-dao-package'
        version {
            name = '1.0'
            desc = '1.0'
            released = new Date()
        }
    }
}

publishing {
    publications {
        mavenPublication(MavenPublication) {
            from components.java
            artifact sourcesJar {
                classifier "sources"
            }
        }
    }
}

publishToMavenLocal.doLast {
    println("The published artifact can be consumed by other local maven projects from local maven repo using ${project.group}:${project.name}:${project.version}")
}
